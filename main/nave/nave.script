function init(self)
	msg.post('.', 'acquire_input_focus') --mensageiro para fazer funcionar os inputs
	self.direction = vmath.vector3() --capturando a direção
	self.speed = 5 --speed da nave
	self.width = go.get('#nave', "size.x")
	self.height = go.get('#nave', "size.y")
	self.tela_top = 0 + self.height --limmite de cima da tela
	self.tela_botton = 640 - self.height--limite de baixo da tela
	self.tela_left = 0 + self.width --limite esquerda da tela
	self.tela_right = 960 - self.width --limite direita da tela

end

function final(self)

end

function update(self, dt)
	local posicao_atual = go.get_position() --pegando posição atual
	local nova_posicao = posicao_atual + self.direction * self.speed --definindo nnova posição

	--seta o sprrite baseado na posição
	if self.direction.x < 0 then
		msg.post('#nave', "play_animation", {id = hash('naveE')})
	elseif self.direction.x > 0 then
		msg.post('#nave', "play_animation", {id = hash('naveD')})
	else
		msg.post('#nave', "play_animation", {id = hash('nave')})
	end
	
	--seta a posição
	if nova_posicao.x > self.tela_right then
		nova_posicao.x = self.tela_right
	end
	if nova_posicao.x < self.tela_left then
		nova_posicao.x = self.tela_left
	end
	if nova_posicao.y > self.tela_botton then
		nova_posicao.y = self.tela_botton
	end
	if nova_posicao.y < self.tela_top then
		nova_posicao.y = self.tela_top
	end
	go.set_position(nova_posicao) --setando nova posição
	self.direction = vmath.vector3() --fica parado espeerando pressionamento da tecla (retorna {x = 0, y = 0, z = 0})

end

function fixed_update(self, dt)

end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action) --configurando as teclas pressionadas
	if action_id == hash('sobe') then
		self.direction.y = 1
		print('Subiu')
	elseif action_id == hash('desce') then
		self.direction.y = -1
		print('Desceu')
	end
	if action_id ==  hash('esquerda') then
		self.direction.x = -1
		print('Esquerda1')
	elseif action_id == hash('direita') then
		self.direction.x = 1
		print('Direita')
	end
end

function on_reload(self)

end
